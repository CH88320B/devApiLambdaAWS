// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiPolizas.Models;

#nullable disable

namespace WebApiPolizas.Migrations
{
    [DbContext(typeof(PolizasDBContext))]
    partial class PolizasDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApiPolizas.Models.Aseguradora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Aseguradoras");
                });

            modelBuilder.Entity("WebApiPolizas.Models.Cliente", b =>
                {
                    b.Property<string>("CedulaAsegurado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PrimerApellido")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoPersona")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CedulaAsegurado");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("WebApiPolizas.Models.Cobertura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Coberturas");
                });

            modelBuilder.Entity("WebApiPolizas.Models.EstadoPoliza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EstadosPoliza");
                });

            modelBuilder.Entity("WebApiPolizas.Models.Poliza", b =>
                {
                    b.Property<string>("NumeroPoliza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AseguradoraId")
                        .HasColumnType("int");

                    b.Property<int?>("AseguradoraId1")
                        .HasColumnType("int");

                    b.Property<string>("CedulaAsegurado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ClienteCedulaAsegurado")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CoberturaId")
                        .HasColumnType("int");

                    b.Property<int?>("CoberturaId1")
                        .HasColumnType("int");

                    b.Property<int>("EstadoPolizaId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoPolizaId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaInclusion")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("date");

                    b.Property<decimal>("MontoAsegurado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Periodo")
                        .HasColumnType("date");

                    b.Property<decimal>("Prima")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoPolizaId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoPolizaId1")
                        .HasColumnType("int");

                    b.HasKey("NumeroPoliza");

                    b.HasIndex("AseguradoraId");

                    b.HasIndex("AseguradoraId1");

                    b.HasIndex("CedulaAsegurado");

                    b.HasIndex("ClienteCedulaAsegurado");

                    b.HasIndex("CoberturaId");

                    b.HasIndex("CoberturaId1");

                    b.HasIndex("EstadoPolizaId");

                    b.HasIndex("EstadoPolizaId1");

                    b.HasIndex("TipoPolizaId");

                    b.HasIndex("TipoPolizaId1");

                    b.ToTable("Polizas");
                });

            modelBuilder.Entity("WebApiPolizas.Models.TipoPoliza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TiposPoliza");
                });

            modelBuilder.Entity("WebApiPolizas.Models.Poliza", b =>
                {
                    b.HasOne("WebApiPolizas.Models.Aseguradora", "Aseguradora")
                        .WithMany()
                        .HasForeignKey("AseguradoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiPolizas.Models.Aseguradora", null)
                        .WithMany("Polizas")
                        .HasForeignKey("AseguradoraId1");

                    b.HasOne("WebApiPolizas.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("CedulaAsegurado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiPolizas.Models.Cliente", null)
                        .WithMany("Polizas")
                        .HasForeignKey("ClienteCedulaAsegurado");

                    b.HasOne("WebApiPolizas.Models.Cobertura", "Cobertura")
                        .WithMany()
                        .HasForeignKey("CoberturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiPolizas.Models.Cobertura", null)
                        .WithMany("Polizas")
                        .HasForeignKey("CoberturaId1");

                    b.HasOne("WebApiPolizas.Models.EstadoPoliza", "EstadoPoliza")
                        .WithMany()
                        .HasForeignKey("EstadoPolizaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiPolizas.Models.EstadoPoliza", null)
                        .WithMany("Polizas")
                        .HasForeignKey("EstadoPolizaId1");

                    b.HasOne("WebApiPolizas.Models.TipoPoliza", "TipoPoliza")
                        .WithMany()
                        .HasForeignKey("TipoPolizaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiPolizas.Models.TipoPoliza", null)
                        .WithMany("Polizas")
                        .HasForeignKey("TipoPolizaId1");

                    b.Navigation("Aseguradora");

                    b.Navigation("Cliente");

                    b.Navigation("Cobertura");

                    b.Navigation("EstadoPoliza");

                    b.Navigation("TipoPoliza");
                });

            modelBuilder.Entity("WebApiPolizas.Models.Aseguradora", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("WebApiPolizas.Models.Cliente", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("WebApiPolizas.Models.Cobertura", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("WebApiPolizas.Models.EstadoPoliza", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("WebApiPolizas.Models.TipoPoliza", b =>
                {
                    b.Navigation("Polizas");
                });
#pragma warning restore 612, 618
        }
    }
}
